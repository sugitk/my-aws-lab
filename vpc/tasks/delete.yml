---
- name: gather information about NAT gateway
  ec2_vpc_nat_gateway_info:
    region: "{{ region }}"
  register: ngw_info

- name: delete NAT gateways
  ec2_vpc_nat_gateway:
    nat_gateway_id: "{{ item.nat_gateway_id }}"
    state: absent
    wait: true
  loop: "{{ ngw_info.result }}"

- name: gather information about Internet gateway
  ec2_vpc_igw_info:
    region: "{{ region }}"
  register: igw_info

- name: delete an Internet gateway
  ec2_vpc_igw:
    vpc_id: "{{ item.attachments[0].vpc_id }}"
    state: absent
  loop: "{{ igw_info.internet_gateways }}"

- name: gather information about subnet
  ec2_vpc_subnet_info:
  register: subnet_info

- name: delete subnets
  ec2_vpc_subnet:
    vpc_id: "{{ item.vpc_id }}"
    az: "{{ item.availability_zone }}"
    cidr: "{{ item.cidr_block }}"
    state: absent
  loop: "{{ subnet_info.subnets }}"

- name: gather information about route tables
  ec2_vpc_route_table_info:
    region: "{{ region }}"
  register: route_tables_info

- name: delete route tables
  ec2_vpc_route_table:
    region: "{{ region }}"
    vpc_id: "{{ item.vpc_id }}"
    route_table_id: "{{ item.id }}"
    lookup: id
    state: absent
  loop: "{{ route_tables_info.route_tables }}"
  ignore_errors: true

- name: gather information about VPC
  ec2_vpc_net_info:
  register: vpc_info

- name: delete vpcs
  ec2_vpc_net:
    name: "{{ item.tags['Name'] }}"
    cidr_block: "{{ item.cidr_block }}"
    region: "{{ region }}"
    state: absent
  loop: "{{ vpc_info.vpcs }}"

- name: gather information about a DHCP options set
  ec2_vpc_dhcp_option_info:
    region: "{{ region }}"
  register: dhcp_info  

- name: delete a DHCP options set
  ec2_vpc_dhcp_option:
    region: "{{ region }}"
    dhcp_options_id: "{{ item.dhcp_options_id }}"
    state: absent
  loop: "{{ dhcp_info.dhcp_options }}"  

- name: gather information about EIP
  ec2_eip_info:
    region: "{{ region }}"
  register: eip_info  
  
- name: delete EIPs
  ec2_eip:
    region: "{{ region }}"
    public_ip: "{{ item.public_ip }}"
    state: absent
  loop: "{{ eip_info.addresses }}" 

