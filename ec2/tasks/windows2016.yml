---
- name: gather information about VPC
  amazon.aws.ec2_vpc_net_info:
    region: "{{ region }}"
    filters:
      "tag:Name": "{{ lab_vpc_name }}"
  register: vpc_info

- name: gather information about subnet
  amazon.aws.ec2_vpc_subnet_info:
    region: "{{ region }}"
    filters:
      vpc-id: "{{ vpc_info.vpcs[0].id }}"
      "tag:Type": public
  register: subnet_info

- name: find my public ip address
  ansible.builtin.uri:
    url: http://ifconfig.me/ip
    return_content: true
  register: my_ipaddress

- name: security group for Windows
  amazon.aws.ec2_security_group:
    name: "{{ owner }} Windows"
    description: Windows
    region: "{{ region }}"
    vpc_id: "{{ vpc_info.vpcs[0].id }}"
    state: present
    rules:
      - proto: tcp
        ports:
          - 389
          - 636
          - 3389
          - 5985
          - 5986
        cidr_ip: "{{ public_cidr_block }}"
      - proto: tcp
        ports:
          - 5985
          - 5986
        cidr_ip: "{{ my_ipaddress.content }}/32"
    tags:
      Name: "{{ owner }} Windows"
      Owner: "{{ owner }}"
  register: security_group

- name: create a VM
  amazon.aws.ec2_instance:
    instance_type: t3.medium
    region: "{{ region }}"
    image_id: "{{ ami_win2016 }}"
    key_name: "{{ key }}"
    state: running
    wait: true
    termination_protection: false
    vpc_subnet_id: "{{ item.subnet_id }}"
    network:
      assign_public_ip: true
    security_group: "{{ security_group.group_name }}"
    user_data: "{{ lookup('file', 'init.ps1') }}"
    volumes:
      - device_name: /dev/sda1
        ebs:
          volume_size: 30
          volume_type: gp2
          delete_on_termination: true
    tags:
      Name: "{{ owner }} Windows 2016"
      Owner: "{{ owner }}"
  with_random_choice: "{{ subnet_info.subnets }}"

